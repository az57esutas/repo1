
Python parancsok:

    [] – egy nyitó és egy záró szögletes zárójel, listát lehet vele megadni.
    
    {} – egy nyitó és egy záró kapcsos zárójel, szótárat lehet vele megadni.
    
    abs() – megadja a zárójelben lévő szám abszolút értékét.
    
    and – if vagy elif után, illetve a while-ciklus feltételei között szerepelhet, és azt lehet vele kikötni, hogy a két oldalán megadott két feltételnek egyszerre kell teljesülnie. Magyarul: és. Kiejtéshez kattints!
    
    append() – nem önálló parancs, hanem a lista adattípus tagfüggvénye. Magyarul: hozzáfűz. Listához tudunk vele új elemet hozzáfűzni. Kiejtéshez kattints!
    
    bool, bool() – Az első szó egy adattípus, a Boolean neve a Pythonban. A szó jelentése Bool-i, de magyarra “logikai” változóként fordítjuk. Értéke True (igaz), vagy False (hamis) lehet. A második egy függvény, ami logikai értékké alakítja azt, ami a zárójelben van. Ha lehet. A Boolean szó kiejtéséhez kattints!
    
    break – arra való, hogy kilépjünk egy ciklusból, még mielőtt az végigfutna. Magyarul: megszakítás. Kiejtéshez kattints!
    
    close() – nem önálló parancs, hanem a fájl típus tagfüggvénye. Megnyitott fájl bezárására való. Magyarul: bezár. Kiejtéshez kattints!
    
    count() – nem önálló parancs, hanem a lista adattípus tagfüggvénye. Magyarul: megszámol. Megmondja, hogy a zárójelben szereplő elem hányszor fordul elő a listában. Kiejtéshez kattints!
    
    dict() – szótár létrehozására szolgál. A dictionary szóból származik, ami szótárat jelent. A dictionary szó kiejtéséhez kattints!
    
    enumerate – a for-ciklusokban használható, ha egyszerre akarunk számlálós és bejárós ciklust. Magyarul körülbelül: számozott listába szed, felsorol. Kiejtéshez kattints!
    
    def – függvényt lehet vele megadni, azaz definiálni. Nem is azt jelenti, hogy deaf, azaz süket, sem azt, hogy def, azaz klassz, hanem a define, magyarul: definiál szó rövidítése. Így ejtjük (mint a süketet), de valójában erről a szóról van szó.
    
    elif – elágazáskor a további (az if-ág nem-teljesülése esetén még megvizsgálandó) feltételeket vezeti be. Az else és az if szó összevonásából született meg, ilyen angol szó nincs. Ha programkódot olvasol, akkor az elif olvasása “különben, ha”
    
    else – elágazáskor az utolsó ágat vezeti be, amely akkor fut le, ha egyik korábbi ág feltétele sem teljesült. Magyarul: különben. Kiejtéshez kattints!
    
    extend() – nem önálló parancs, hanem a lista adattípus tagfüggvénye. Magyarul: bővít. Egy listával bővíti az eredeti listát: az új listát a régi végére biggyeszti. Kiejtéshez kattints!
    
    False – a bool adattípus egyik lehetséges értéke. Magyarul: hamis. Kiejtéshez kattints! Mindig nagy betűvel kezdjük.
    
    float, float() – Az első szó egy adattípus, a floating point number, magyarul lebegőpontos szám típust jelzi. A második egy függvény, ami lebegőpontos számmá alakítja azt, ami a zárójelben van. Ha lehet. A floating szó kiejtéséhez kattints!
    
    for – a bejárós, vagy más néven for-ciklus első szava. Nem tudom jól lefordítani. Kiejtéshez kattints!
    
    get() – nem önálló parancs, hanem a szótár adattípus tagfüggvénye. Magyarul: megszerez, megkap. A szótár kulcsához tartozó értéket lehet vele megtudni, de beállítható arra is, hogyha nincs ilyen kulcs, akkor adjon vissza általunk megadott értéket a kulcshoz tartozó érték helyett. Kiejtéshez kattints!
    
    IDE – ez nem parancs, az integrált fejlesztői környezet (Integrated Development Environment) rövidítése. Tulajdonképpen egy kódszerkesztőprogram, pár egyéb képességgel. A Python saját IDE-je az IDLE, de sok más IDE is használható hozzá.
    
    IDLE – ez nem parancs, hanem a Python fejlesztői környezetének neve. Van jelentése is, mert a készítők vicces kedvükben voltak. Magyarul: tétlen.  Kiejtéshez kattints!
    
    if – a programban a elágazás első feltételét vezeti be. Magyarul: ha. Kiejtéshez kattints!
    
    index() – nem önálló parancs, hanem a lista adattípus tagfüggvénye. Visszaadja a zárójelben megadott elem első előfordulásának indexét a listában. Kiejtéshez kattints!
    
    input() – választ vár a felhasználótól. A zárójelben elhelyezhetsz kérdést, hogy a felhasználó tudja, hogy mire kell válaszolnia. A választ érdemes változóban tárolni. Magyarul: bemenet, bemenő jel. Kiejtéshez kattints!
    
    insert(hova, elem) – nem önálló parancs, hanem a lista adattípus tagfüggvénye. Magyarul: beszúr. Két paramétere van, a listába az új elem-et a lista “hova” helyére szúrja be. Kiejtéshez kattints!
    
    int, int() – Az első szó egy adattípus, az integer, magyarul egész szám típust jelzi. A második egy függvény, ami egész számmá alakítja azt, ami a zárójelben van. Ha lehet. Az integer szó kiejtéséhez kattints!
    
    import – modult tölthetünk be vele. Illik a program elején szerepeltetni. Kiejtéshez kattints!
    
    items() – nem önálló parancs, hanem a szótár adattípus tagfüggvénye. Magyarul: dolgok, egy felsorolás elemei. A szótár kulcs-érték párjait adja vissza, hogy for-ral bejárhassuk őket. Kiejtéshez kattints!
    
    list() – lista létrehozására szolgál. Magyarul: lista. Kiejtéshez kattints!
    
    lower() – nem önálló parancs, hanem a string adattípus tagfüggvénye. A stringet kisbetűssé alakítja. Ha eddig is kisbetűs volt, nos, annyi baj legyen! A lower case magyarul kisbetűt jelent. Kiejtéshez kattints!
    
    join() – nem önálló parancs, hanem a string adattípus tagfüggvénye. A zárójelben egy olyan bejárható objektumot, például listát adhatunk meg, ami további stringeket tartalmaz. A zárójelben lévő objektum stringejit úgy fűzi eggyé (azaz konkatenálja) a join, hogy közéjük az előtte szereplő stringet teszi. Például az ‘X’.join([‘alma’, ‘körte’, ‘szilva’]) eredménye almaXkörteXszilva. Magyarul: illeszt, összeforr, egybeköt, egyesít. Kiejtéshez kattints!
    
    keys() – nem önálló parancs, hanem a szótár adattípus tagfüggvénye. Magyarul: kulcsok. A szótár kulcsait adja vissza, hogy for-ral bejárhassuk őket. Kiejtéshez kattints!
    
    len() – megmondja, hogy hány elemű a zárójelben lévő lista, vagy azt, hogy hány karakteres a zárójelben lévő karakterlánc. A length, azaz hossz szóból származik, de ilyen angol szó nincs. A length szó kiejtéséhez kattints!
    
    map, map() -Az első szó a map (magyarul: leképez) objektumtípust jelzi, a másik egy függvény, amivel map típusú objektumok elő. A függvény két paramétert vár: az első egy másik függvény neve, a második egy bejárható objektum, például lista. A map() függvény a megadott függvényt a lista minden elemére alkalmazza. Például a map(str, [1, 2, 3]) parancs az [1, 2, 3] lista minden egyes tagjára lefuttatja az str() függvényt. Kiejtéshez kattints!
    
    max() – A zárójelben egy bejárható objektumot, például listát, vagy range-t adunk meg. A max() függvény megadja a bejárható objektumban lévő számok közül a legnagyobbat,  ha karakterláncokat vizsgálunk, akkor az ábécérendben a leghátul állót.
    
    min() – A zárójelben egy bejárható objektumot, például listát, vagy range-t adunk meg. A min() függvény megadja a bejárható objektumban lévő számok közül a legkisebbet,  ha karakterláncokat vizsgálunk, akkor az ábécérendben a legelöl állót.
    
    None – változónak adható értékül, ha semmilyen konkrét értéket nem akarunk a változóban tárolni, vagy az eddig benne tároltat óhajtjuk “kidobni”. Magyarul: semmi. Kiejtéshez kattints! Mindig nagy betűvel kezdjük.
    
    open() – nem önálló parancs, hanem a fájl típus tagfüggvénye. Fájl megnyitására való. Magyarul: nyit. Kiejtéshez kattints!
    
    or – if vagy elif után következhet, és azt lehet vele kikötni, hogy a megadott két feltétel közül elég, ha az egyik teljesül. Magyarul: vagy. Kiejtéshez kattints!
    
    pop() -nem önálló parancs, hanem a lista és a szótár adattípus tagfüggvénye. Kiveszi a listából (szótárból) és visszaadja azt, ami a zárójelben van. Ha nem írunk semmit a listába, akkor a lista utolsó elemével teszi ugyanezt. Magyarul: kipattint, itt inkább kiugraszt.  Kiejtéshez kattints!
    
    print() – kiírja, ami a zárójelben van. Magyarul: nyomtasd. Kiejtéshez kattints!
    
    random – ez nem parancs, hanem a véletlenszámok kezeléséhez szükséges modul neve. Kiejtéshez kattints!
    
    random.choice() – a zárójelben megadott bejárható objektumból választ egyet. A choice szó jelentése magyarul: választás. Kiejtéshez kattints!
    
    random.randint() – véletlen egész számot állíthatunk elő vele. Az alsó és a felső határt a zárójelben, vesszővel elválasztva adod meg.
    
    random.sample() – a zárójelben megadott bejárható objektumból választ annyit, amennyit kérünk. A kiválasztottak között nem lesz ismétlődés. A sample szó jelentése magyarul: minta. Kiejtéshez kattints!
    
    range, range() – Az első szó a range (magyarul: sorozat, konkrétan számsorozat) objektumtípust jelzi, a másik egy függvény, amivel range típusú objektumok, azaz számsorozatok állíthatók elő. Leggyakrabban for akármi in range(100) jellegű utasításban használjuk, a számlálós ciklus szimulálására. Kiejtéshez kattints!
    
    read() – nem önálló parancs, hanem a fájl típus tagfüggvénye. Fájl tartalmának egyszerre, vagy pár karakterenként történő beolvasására való. Magyarul: olvas. Kiejtéshez kattints!
    
    readline() – nem önálló parancs, hanem a fájl típus tagfüggvénye. Szövegfájl egy sorának beolvasására való. Magyarul: olvas sort.
    
    readlines() – nem önálló parancs, hanem a fájl típus tagfüggvénye. Szövegfájl sorait olvashatod be egy listába, a lista egyes elemei a szövegfájl sorai lesznek. Magyarul: olvas sortokat.
    
    remove() – nem önálló parancs, hanem a lista adattípus tagfüggvénye. Magyarul: eltávolít. A zárójelben megadott elem első előfordulását kiveszi a listából. Kiejtéshez kattints!
    
    reversed() – a zárójelben megadott listát vagy karakterláncot megfordítva adja vissza. Magyarul: megfordítva, megfordítottan. A reverse szó kiejtéséhez kattints!
    
    round(szám, tizedesjegy) – tizedesjegy pontosságra kerekíti a megadott számot. Magyarul: kerekít. Kiejtéshez kattints!
    
    return – függvény visszatérési értékét lehet vele megadni. Magyarul: visszatér. Kiejtéshez kattints!
    
    time.sleep() – a zárójelben megadott másodpercet vár a programod. Magyarul: alszik. Kiejtéshez kattints!
    
    set() – halmaz létrahozására szolgál. Magyarul: halmaz. Kiejtéshez kattints!
    
    sort() – nem önálló parancs, hanem a lista adattípus tagfüggvénye, és arra jó, hogy a listát helyben rendezze – azaz az a lista, amelyikre meghívod, rendezett lesz. Magyarul: rendez. Paraméterezését lásd a sorted() függvénynél. Kiejtéshez kattints!
    
    sorted() – a zárójelben megadott listát rendezi, és új listát ad vissza, az eredetit nem bántja. A reverse=True megadásával lehetőséged van csökkenő sorrendet kérni, és kulcsfüggvényt is adhatsz meg, amivel úgy rendezel, ahogy jól esik – részletekért lásd a rendezős postot. Magyarul: rendezett, rendezve. Kiejtéshez kattints!
    
    split() – nem önálló parancs, hanem a karakterlánc adattípus tagfüggvénye, és arra jó, hogy a zárójelben megadott határolókarakternél szétszedi a karakterláncot listává. Ha nem adunk meg semmit, akkor a whitespace karaktereknél hasít. Magyarul: hasít. Kiejtéshez kattints!
    
    str, str() – Az első szó a string típust jelzi. A string szónak jó sok jelentése van, például madzagot is jelent, de nekünk jobb a füzér, informatikai szövegekben pedig karakterláncnak fordítandó. A legtöbb esetben  jó, ha stringet olvasol, és szöveget gondolsz. A második szó egy függvény, ami szöveggé, karakterlánccá alakítja azt, ami a zárójelben van, ha lehet. A string szó kiejtéséhez kattints!
    
    strip() – nem önálló parancs, hanem a karakterlánc adattípus tagfüggvénye. A karakterlánc elejéről és végéről lepusztítja a zárójelben megadott karaktereket. Ha nem adunk meg semmit, akkor a whitespace-karaktereket takarítja le, azaz a szóközt, tabulátort, soremelést, kocsivisszát. Magyarul: megfoszt, lemeztelenít. Kiejtéshez kattints! A whitespace magyarul fehér helyet jelent, de soha nem szoktuk lefordítani.
    
    sum() – A zárójelben egy bejárható objektumot, például listát, vagy range-t adunk meg. A sum() függvény megadja a bejárható objektumban lévő számok összegét. Magyarul: összeg. Kiejtéshez kattints!
    
    True – a bool adattípus egyik lehetséges értéke. Magyarul: igaz. Kiejtéshez kattints! Mindig nagy betűvel kezdjük.
    
    update() – nem önálló parancs, hanem a szótár adattípus tagfüggvénye. Magyarul: frissít. Létező szótár értékeit frissíthetjük vele. Kiejtéshez kattints!
    
    upper() – nem önálló parancs, hanem a karakterlánc adattípus tagfüggvénye. A karakterlánc NAGYBETŰS változatát adja vissza. Az upper case szó jelentése magyarul: nagybetű. Kiejtéshez kattints!
    
    values() – nem önálló parancs, hanem a szótár adattípus tagfüggvénye. Magyarul: értékek. A szótár értékeit adja vissza, hogy for-ral bejárhassuk őket. Kiejtéshez kattints!
    
    while – a róla elnevezett while-ciklus első szava. Addig ismétlődik a ciklus, amíg a while után megfogalmazott feltétel teljesül. Magyarul: amíg. Kiejtéshez kattints!

A listáért köszönet a https://pythonidomar.wordpress.com -szerzőjének.
